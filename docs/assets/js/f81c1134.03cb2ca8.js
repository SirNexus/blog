"use strict";(self.webpackChunkaidan_blog=self.webpackChunkaidan_blog||[]).push([[130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"istio-pod-to-pod-mtls","metadata":{"permalink":"/blog/istio-pod-to-pod-mtls","source":"@site/blog/2025-04-29-istio-pod-to-pod-mtls/index.md","title":"Enabling pod to pod mTLS in Istio","description":"Imagine a situation where you have multiple different clusters, each running","date":"2025-04-29T00:00:00.000Z","tags":[{"inline":true,"label":"Istio","permalink":"/blog/tags/istio"},{"inline":true,"label":"ServiceEntry","permalink":"/blog/tags/service-entry"},{"inline":true,"label":"pod","permalink":"/blog/tags/pod"},{"inline":true,"label":"mTLS","permalink":"/blog/tags/m-tls"},{"inline":true,"label":"strict","permalink":"/blog/tags/strict"},{"inline":true,"label":"authentication","permalink":"/blog/tags/authentication"}],"readingTime":0.575,"hasTruncateMarker":false,"authors":[{"name":"Aidan Carson","key":"aidancarson","page":null}],"frontMatter":{"slug":"istio-pod-to-pod-mtls","title":"Enabling pod to pod mTLS in Istio","authors":"aidancarson","tags":["Istio","ServiceEntry","pod","mTLS","strict","authentication"]},"unlisted":false},"content":"Imagine a situation where you have multiple different clusters, each running\\nan Istio service mesh and which are federated together to talk to each other.\\nNow also imagine that these clusters are networked together such that each\\npod IP is uniquely addressable and able to be communicated with from any other\\ncluster.\\n\\nI faced a situation like this, where I needed to group endpoints into logical\\nhostnames that represented services backed by those endpoints. Because endpoints\\ncould live anywhere, in any cluster, I landed on using a ServiceEntry to register\\nthe hostname and WorkloadEntries to represent the endpoints service that hostname.\\nThe configuration looked something like this:\\n\\nServiceEntry:\\n```yaml\\n\\n```\\nWorkloadEntry:\\n```\\n\\n```\\n\\n```yaml\\n```"}]}}')}}]);